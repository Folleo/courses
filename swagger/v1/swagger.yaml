---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/authors":
    get:
      summary: Retrieves all authors
      tags:
      - Authors
      responses:
        '200':
          description: Returns all authors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
    post:
      summary: Creates an author
      tags:
      - Authors
      parameters: []
      responses:
        '201':
          description: Author created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
              required:
              - first_name
              - last_name
  "/authors/{id}":
    get:
      summary: Retrieves an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Author found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: Author not found
    patch:
      summary: Updates an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Author updated
        '404':
          description: Author not found
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
              required:
              - first_name
              - last_name
    delete:
      summary: Destroys an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No content
        '409':
          description: Author can not be deleted
        '404':
          description: Author not found
  "/courses":
    get:
      summary: Retrieves all courses
      tags:
      - Courses
      responses:
        '200':
          description: Returns all courses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    author_id:
                      type: integer
                    topic_ids:
                      type: array
                      items:
                        type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
    post:
      summary: Creates a course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: Course created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                author_id:
                  type: string
                topic_ids:
                  type: array
                  items:
                    type: integer
              required:
              - name
              - author_id
  "/courses/{id}":
    get:
      summary: Retrieves a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Course found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  author_id:
                    type: integer
                  topic_ids:
                    type: array
                    items:
                      type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: Course not found
    patch:
      summary: Updates a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Course updated
        '404':
          description: Course not found
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                author_id:
                  type: string
                topic_ids:
                  type: array
                  items:
                    type: integer
    delete:
      summary: Destroys a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No content
        '404':
          description: Course not found
  "/topics":
    get:
      summary: Retrieves all topics
      tags:
      - Topics
      responses:
        '200':
          description: Returns all topics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
    post:
      summary: Creates a topic
      tags:
      - Topics
      parameters: []
      responses:
        '201':
          description: Topic created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
              - name
  "/topics/{id}":
    get:
      summary: Retrieves a topic
      tags:
      - Topics
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Topic found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: Topic not found
    patch:
      summary: Updates a topic
      tags:
      - Topics
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Topic updated
        '404':
          description: Topic not found
        '400':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
              - name
    delete:
      summary: Destroys a topic
      tags:
      - Topics
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No content
        '404':
          description: Topic not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
